name: Build and Deploy Docker Image to ECR

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push Docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: test
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: Get EC2 Public DNS
        id: get-ec2-dns
        run: |
          INSTANCE_PUBLIC_DNS=$(aws ec2 describe-instances --instance-ids ${{ secrets.EC2_INSTANCE_ID }} --query "Reservations[0].Instances[0].PublicDnsName" --output text)
          echo "INSTANCE_PUBLIC_DNS=$INSTANCE_PUBLIC_DNS" >> $GITHUB_ENV
          echo "Public DNS: $INSTANCE_PUBLIC_DNS"

      - name: Deploy to EC2
        env:
          INSTANCE_PUBLIC_DNS: ${{ env.INSTANCE_PUBLIC_DNS }}
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_USER: ${{ secrets.EC2_USER }}
        run: |
          if [ -z "$INSTANCE_PUBLIC_DNS" ]; then
            echo "Error: INSTANCE_PUBLIC_DNS is empty."
            exit 1
          fi

          # Deploy the Docker container to EC2
          ssh -i $EC2_SSH_KEY $EC2_USER@$INSTANCE_PUBLIC_DNS << 'EOF'
            # Update Docker
            cd ./app
            docker-compose down
            docker-compose up -d
          EOF
