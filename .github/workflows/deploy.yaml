name: Build and Deploy Docker Image to ECR

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push Docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: test
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $IMAGE_TAG .
          docker tag $IMAGE_TAG:latest $REGISTRY/$REPOSITORY:latest
          docker push $REGISTRY/$REPOSITORY:latest

      - name: Save SSH key to file
        run: |
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem

      # Log ls command to see if the file is created
      - name: List files
        run: |
          ls -la

      - name: Copy docker-compose.yml to EC2
        run: |
          scp -i private_key.pem ./docker-compose.yml ${{ secrets.EC2_USER }}@${{ secrets.EC2_PUBLIC_IP }}:/app/docker-compose.yml

      - name: Deploy to EC2
        run: |
          ssh -i private_key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
            cd /home/${{ secrets.EC2_USER }}/app
            docker-compose -f docker-compose.yml pull
            docker-compose -f docker-compose.yml up -d
          EOF

      - name: Cleanup
        run: |
          rm private_key.pem
